package interfaz;

import dominio.*;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.*;

/**
 *
 * @author Fernando Gonzalez (223939) & Facundo San Andrea (258053)
 */

public class VentanaMenu extends javax.swing.JFrame implements Observador {

    public VentanaMenu(Sistema sistema) {
        initComponents();
        setModelo(sistema);
    }

    @Override
    public void actualizar() {
        //Cada vez que el modelo cambie, vuelvo a cargar la lista
        ManejadorTema.aplicarTema(this, modelo.isModoOscuro());
    }

    public void setModelo(Sistema nuevoModelo) {
        this.modelo = nuevoModelo;
        modelo.agregarObservador(this);
        actualizar(); // para refrescar datos en pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTema = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuGestion = new javax.swing.JMenu();
        menuClientes = new javax.swing.JMenuItem();
        menuEmpleados = new javax.swing.JMenuItem();
        menuVehiculos = new javax.swing.JMenuItem();
        menuContratos = new javax.swing.JMenuItem();
        menuMovimientos = new javax.swing.JMenu();
        movimientoEntrada = new javax.swing.JMenuItem();
        movimientoSalidas = new javax.swing.JMenuItem();
        movimientosAdicionales = new javax.swing.JMenuItem();
        menuVarios = new javax.swing.JMenu();
        variosReportes = new javax.swing.JMenuItem();
        variosRecuperacion = new javax.swing.JMenuItem();
        variosGrabacion = new javax.swing.JMenuItem();
        variosJuego = new javax.swing.JMenuItem();
        variosAutores = new javax.swing.JMenuItem();
        menuTerminar = new javax.swing.JMenu();
        terminarSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Obligatorio 2 - Facundo San Andrea (258053) y Fernando Gonzalez (223939)");
        getContentPane().setLayout(null);

        btnTema.setText("Claro / Oscuro");
        btnTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTemaActionPerformed(evt);
            }
        });
        getContentPane().add(btnTema);
        btnTema.setBounds(170, 90, 260, 50);

        menuGestion.setText("Gestion");

        menuClientes.setText("Clientes");
        menuClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuClientesActionPerformed(evt);
            }
        });
        menuGestion.add(menuClientes);

        menuEmpleados.setText("Empleados");
        menuEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEmpleadosActionPerformed(evt);
            }
        });
        menuGestion.add(menuEmpleados);

        menuVehiculos.setText("Vehiculos");
        menuVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuVehiculosActionPerformed(evt);
            }
        });
        menuGestion.add(menuVehiculos);

        menuContratos.setText("Contratos");
        menuContratos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuContratosActionPerformed(evt);
            }
        });
        menuGestion.add(menuContratos);

        jMenuBar1.add(menuGestion);

        menuMovimientos.setText("Movimientos");

        movimientoEntrada.setText("Entradas");
        movimientoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movimientoEntradaActionPerformed(evt);
            }
        });
        menuMovimientos.add(movimientoEntrada);

        movimientoSalidas.setText("Salidas");
        movimientoSalidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movimientoSalidasActionPerformed(evt);
            }
        });
        menuMovimientos.add(movimientoSalidas);

        movimientosAdicionales.setText("Servicios Adicionales");
        movimientosAdicionales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movimientosAdicionalesActionPerformed(evt);
            }
        });
        menuMovimientos.add(movimientosAdicionales);

        jMenuBar1.add(menuMovimientos);

        menuVarios.setText("Varios");

        variosReportes.setText("Reportes");
        variosReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variosReportesActionPerformed(evt);
            }
        });
        menuVarios.add(variosReportes);

        variosRecuperacion.setText("Recuperacion de Datos");
        variosRecuperacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variosRecuperacionActionPerformed(evt);
            }
        });
        menuVarios.add(variosRecuperacion);

        variosGrabacion.setText("Grabacion de Datos");
        variosGrabacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variosGrabacionActionPerformed(evt);
            }
        });
        menuVarios.add(variosGrabacion);

        variosJuego.setText("Mini Juego");
        variosJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variosJuegoActionPerformed(evt);
            }
        });
        menuVarios.add(variosJuego);

        variosAutores.setText("Informacion de Autores");
        variosAutores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variosAutoresActionPerformed(evt);
            }
        });
        menuVarios.add(variosAutores);

        jMenuBar1.add(menuVarios);

        menuTerminar.setText("Terminar");

        terminarSalir.setText("Salir");
        terminarSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminarSalirActionPerformed(evt);
            }
        });
        menuTerminar.add(terminarSalir);

        jMenuBar1.add(menuTerminar);

        setJMenuBar(jMenuBar1);

        setBounds(0, 0, 617, 270);
    }// </editor-fold>//GEN-END:initComponents

    private void menuVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuVehiculosActionPerformed
        // TODO add your handling code here:
        VentanaVehiculo vVehiculo = new VentanaVehiculo(modelo);
        vVehiculo.setVisible(true);
        ventanas.add(vVehiculo);
    }//GEN-LAST:event_menuVehiculosActionPerformed

    private void movimientoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movimientoEntradaActionPerformed
        // TODO add your handling code here:
        VentanaEntrada vEntrada = new VentanaEntrada(modelo);
        vEntrada.setVisible(true);
        ventanas.add(vEntrada);
    }//GEN-LAST:event_movimientoEntradaActionPerformed

    private void movimientoSalidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movimientoSalidasActionPerformed
        // TODO add your handling code here:
        VentanaSalida vSalida = new VentanaSalida(modelo);
        vSalida.setVisible(true);
        ventanas.add(vSalida);
    }//GEN-LAST:event_movimientoSalidasActionPerformed

    private void variosJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variosJuegoActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(() -> {
            VentanaMiniJuego v = new VentanaMiniJuego();
            v.setVisible(true);
        });
    }//GEN-LAST:event_variosJuegoActionPerformed

    private void variosReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variosReportesActionPerformed
        // TODO add your handling code here:
        VentanaReporte vReporte = new VentanaReporte(modelo);
        vReporte.setVisible(true);
        ventanas.add(vReporte);
    }//GEN-LAST:event_variosReportesActionPerformed

    private void menuEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEmpleadosActionPerformed
        VentanaEmpleado vEmpleado = new VentanaEmpleado(modelo);
        vEmpleado.setVisible(true);
        ventanas.add(vEmpleado);
    }//GEN-LAST:event_menuEmpleadosActionPerformed

    private void menuContratosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuContratosActionPerformed
        // TODO add your handling code here:
        VentanaContrato vContrato = new VentanaContrato(modelo);
        vContrato.setVisible(true);
        ventanas.add(vContrato);
    }//GEN-LAST:event_menuContratosActionPerformed

    private void movimientosAdicionalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movimientosAdicionalesActionPerformed
        // TODO add your handling code here:
        VentanaServiciosAdicionales vServicios = new VentanaServiciosAdicionales(modelo);
        vServicios.setVisible(true);
        ventanas.add(vServicios);
    }//GEN-LAST:event_movimientosAdicionalesActionPerformed

    private void terminarSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminarSalirActionPerformed
        // TODO add your handling code here:
        int opcion = JOptionPane.showConfirmDialog(this, "¿Seguro que desea salir?", "Confirmar salida", JOptionPane.YES_NO_OPTION);
        if (opcion == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_terminarSalirActionPerformed

    private void btnTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTemaActionPerformed
        // TODO add your handling code here:
        modelo.cambiarModoOscuro();
    }//GEN-LAST:event_btnTemaActionPerformed

    private void menuClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuClientesActionPerformed
        // TODO add your handling code here:
        VentanaCliente vCliente = new VentanaCliente(modelo);
        vCliente.setVisible(true);
        ventanas.add(vCliente);
    }//GEN-LAST:event_menuClientesActionPerformed

    private void variosRecuperacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variosRecuperacionActionPerformed
        int opc = JOptionPane.showConfirmDialog(this, "¿Desea recuperar los datos?", "Recuperar", JOptionPane.YES_NO_OPTION);
        if (opc == JOptionPane.YES_OPTION) {
            ManejadorArchivos archivo = new ManejadorArchivos();
            Sistema recuperado = (Sistema) archivo.leerObjeto("DATOS.ser");
            if (recuperado == null) {
                JOptionPane.showMessageDialog(this, "No hay datos para recuperar. Sistema reiniciado.", "Alerta", JOptionPane.WARNING_MESSAGE);
            } else {
                modelo = recuperado;
                modelo.agregarObservador(this);
                //Actualizo el modelo de las ventanas abiertas              
                actualizar();
                JOptionPane.showMessageDialog(this, "Datos recuperados correctamente!", "Confirmación", JOptionPane.INFORMATION_MESSAGE);
            }
            for (JFrame ventana : ventanas) {
                if (ventana instanceof VentanaEmpleado) {
                    ((VentanaEmpleado) ventana).setModelo(modelo);
                }
                if (ventana instanceof VentanaCliente) {
                    ((VentanaCliente) ventana).setModelo(modelo);
                }
                if (ventana instanceof VentanaVehiculo) {
                    ((VentanaVehiculo) ventana).setModelo(modelo);
                }
                if (ventana instanceof VentanaEntrada) {
                    ((VentanaEntrada) ventana).setModelo(modelo);
                }
                if (ventana instanceof VentanaSalida) {
                    ((VentanaSalida) ventana).setModelo(modelo);
                }
                if (ventana instanceof VentanaReporte) {
                    ((VentanaReporte) ventana).setModelo(modelo);
                }
                if (ventana instanceof VentanaServiciosAdicionales) {
                    ((VentanaServiciosAdicionales) ventana).setModelo(modelo);
                }
                if (ventana instanceof VentanaContrato) {
                    ((VentanaContrato) ventana).setModelo(modelo);
                }

            }
        }
    }//GEN-LAST:event_variosRecuperacionActionPerformed

    private void variosAutoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variosAutoresActionPerformed
        // TODO add your handling code here:
        VentanaInfoAutores vAutores = new VentanaInfoAutores(modelo);
        vAutores.setVisible(true);
        ventanas.add(vAutores);

    }//GEN-LAST:event_variosAutoresActionPerformed

    private void variosGrabacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variosGrabacionActionPerformed
        int opc = JOptionPane.showConfirmDialog(this, "¿Desea guardar sus datos?", "Guardar", JOptionPane.YES_NO_OPTION);
        if (opc == JOptionPane.YES_OPTION) {
            try {
                ManejadorArchivos archivo = new ManejadorArchivos();
                archivo.guardarObjeto("DATOS.ser", modelo);
                JOptionPane.showMessageDialog(this, "Sus datos han sido guardados!", "Confirmación", JOptionPane.INFORMATION_MESSAGE);
            } catch (HeadlessException e) {
                JOptionPane.showMessageDialog(this, "No ha sido posible guardar sus datos.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_variosGrabacionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTema;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem menuClientes;
    private javax.swing.JMenuItem menuContratos;
    private javax.swing.JMenuItem menuEmpleados;
    private javax.swing.JMenu menuGestion;
    private javax.swing.JMenu menuMovimientos;
    private javax.swing.JMenu menuTerminar;
    private javax.swing.JMenu menuVarios;
    private javax.swing.JMenuItem menuVehiculos;
    private javax.swing.JMenuItem movimientoEntrada;
    private javax.swing.JMenuItem movimientoSalidas;
    private javax.swing.JMenuItem movimientosAdicionales;
    private javax.swing.JMenuItem terminarSalir;
    private javax.swing.JMenuItem variosAutores;
    private javax.swing.JMenuItem variosGrabacion;
    private javax.swing.JMenuItem variosJuego;
    private javax.swing.JMenuItem variosRecuperacion;
    private javax.swing.JMenuItem variosReportes;
    // End of variables declaration//GEN-END:variables
    private Sistema modelo;
    ArrayList<JFrame> ventanas = new ArrayList<>();
}
